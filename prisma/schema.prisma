// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id                 String        @id @default(uuid())
  name               String
  email              String        @unique
  passwordHash       String
  stripeCustomerId   String?       @unique
  companyName        String?
  phone              String?
  websiteUrl         String?
  websiteGoals       String?
  designPreferences  String?
  formSubmitted      Boolean       @default(false)
  formSubmittedAt    DateTime?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  subscriptions      Subscription[]
  invoices           Invoice[]
}

model Subscription {
  id                 String    @id @default(uuid())
  customerId         String
  customer           Customer  @relation(fields: [customerId], references: [id])
  stripeSubscriptionId String  @unique
  status             String // 'active', 'past_due', 'canceled', 'trialing', etc.
  planName           String
  planPrice          Int
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  cancelAtPeriodEnd  Boolean   @default(false)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Invoice {
  id               String    @id @default(uuid())
  customerId       String
  customer         Customer  @relation(fields: [customerId], references: [id])
  stripeInvoiceId  String    @unique
  amount           Int
  status           String
  invoiceNumber    String?
  invoicePdf       String?
  invoiceDate      DateTime
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  message   String   @db.Text
  service   String?
  status    String   @default("new") // new, read, responded
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([status])
  @@index([createdAt])
}

model Payment {
  id            String   @id @default(cuid())
  customerId    String
  customerEmail String
  customerName  String
  amount        Int      // Amount in cents
  status        String   // pending, completed, failed
  paymentType   String   // deposit, full, remaining
  packageType   String
  stripeSessionId String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([customerId])
  @@index([status])
  @@index([paymentType])
  @@index([createdAt])
}

model PaymentReminder {
  id            String   @id @default(cuid())
  customerId    String
  customerEmail String
  customerName  String
  amount        Int      // Amount in cents
  status        String   // pending, sent, completed
  reminderType  String   // initial, followup1, followup2
  scheduledFor  DateTime
  sentAt        DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([customerId])
  @@index([status])
  @@index([scheduledFor])
  @@index([createdAt])
} 